// Generated by HLC 4.2.4 (HL v4)
#ifndef INC_h2d__col___Polygon__Polygon_Impl_
#define INC_h2d__col___Polygon__Polygon_Impl_
typedef struct _h2d__col___Polygon__$Polygon_Impl_ *h2d__col___Polygon__$Polygon_Impl_;
typedef struct _h2d__col___Polygon__Polygon_Impl_ *h2d__col___Polygon__Polygon_Impl_;
#include <hl/Class.h>
#include <hl/BaseType.h>
#include <_std/String.h>
#include <hl/types/ArrayObj.h>
#include <hxd/impl/ArrayIterator_h2d_col_Point.h>
#include <hl/types/ArrayBytes_Int.h>
#include <h2d/col/Bounds.h>
#include <h2d/col/PolygonCollider.h>
#include <h2d/col/Point.h>
#include <h2d/col/Matrix.h>
#include <h2d/col/Ray.h>


struct _h2d__col___Polygon__$Polygon_Impl_ {
	hl_type *$type;
	hl_type* __type__;
	vdynamic* __meta__;
	varray* __implementedBy__;
	String __name__;
	vdynamic* __constructor__;
	vclosure* get_length;
	vclosure* get_points;
	vclosure* _new;
	vclosure* iterator;
	vclosure* fastTriangulate;
	vclosure* toSegments;
	vclosure* toIPolygon;
	vclosure* getBounds;
	vclosure* getCollider;
	vclosure* xSort;
	vclosure* convexHull;
	vclosure* isClockwise;
	vclosure* area;
	vclosure* centroid;
	vclosure* side;
	vclosure* isConvex;
	vclosure* reverse;
	vclosure* transform;
	vclosure* contains;
	vclosure* findClosestPoint;
	vclosure* projectPoint;
	vclosure* distance;
	vclosure* distanceSq;
	vclosure* rayIntersection;
	vclosure* orientation;
	vclosure* onSegment;
	vclosure* intersect;
	vclosure* selfIntersecting;
	vclosure* optimize;
	vclosure* optimizeRec;
	vclosure* makeCircle;
};
struct _h2d__col___Polygon__Polygon_Impl_ {
	hl_type *$type;
};
#endif

