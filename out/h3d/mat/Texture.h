// Generated by HLC 4.2.4 (HL v4)
#ifndef INC_h3d__mat__Texture
#define INC_h3d__mat__Texture
typedef struct _h3d__mat__$Texture *h3d__mat__$Texture;
typedef struct _h3d__mat__Texture *h3d__mat__Texture;
#include <h3d/mat/Texture.h>
#include <hl/types/ArrayBytes_Int.h>
#include <hl/types/ArrayObj.h>
#include <hl/Class.h>
#include <hl/BaseType.h>
#include <_std/String.h>
#include <hxd/PixelFormat.h>
#include <hxd/BitmapData.h>
#include <hxd/Pixels.h>
#include <haxe/ds/IntMap.h>
#include <haxe/ds/StringMap.h>
#include <h3d/impl/MemoryManager.h>
#include <h3d/mat/MipMap.h>
#include <h3d/mat/Filter.h>
#include <h3d/mat/Wrap.h>
#include <h3d/mat/DepthBuffer.h>


typedef struct {
	HL__ENUM_CONSTRUCT__
	h3d__mat__Texture p0;
	int p1;
} Enumt$ctx_de1c297;
typedef struct {
	HL__ENUM_CONSTRUCT__
	int p0;
	hl__types__ArrayBytes_Int p1;
	hl__types__ArrayObj p2;
} Enumt$ctx_7665654;
typedef struct {
	HL__ENUM_CONSTRUCT__
	int p0;
	vdynamic* p1;
	h3d__mat__Texture p2;
} Enumt$ctx_25196c1;
struct _h3d__mat__$Texture {
	hl_type *$type;
	hl_type* __type__;
	vdynamic* __meta__;
	varray* __implementedBy__;
	String __name__;
	vdynamic* __constructor__;
	int UID;
	int PREVENT_AUTO_DISPOSE;
	venum* nativeFormat;
	vclosure* fromBitmap;
	vclosure* fromPixels;
	vclosure* fromColor;
	vclosure* genDisc;
	vclosure* genTexture;
	vclosure* drawGenTexture;
	vclosure* defaultCubeTexture;
	vclosure* genChecker;
	haxe__ds__IntMap checkerTextureKeys;
	haxe__ds__IntMap noiseTextureKeys;
	haxe__ds__StringMap genTextureKeys;
	vclosure* genNoise;
	vclosure* allocNoise;
	vclosure* allocChecker;
};
struct _h3d__mat__Texture {
	hl_type *$type;
	vvirtual* _t;
	h3d__impl__MemoryManager mem;
	int id;
	String name;
	int width;
	int height;
	int flags;
	venum* format;
	int bits;
	hl__types__ArrayObj waitLoads;
	venum* mipMap;
	venum* filter;
	venum* wrap;
	double lodBias;
	vclosure* realloc;
	h3d__mat__DepthBuffer depthBuffer;
	int _lastFrame;
};
#endif

