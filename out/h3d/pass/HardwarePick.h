// Generated by HLC 4.2.4 (HL v4)
#ifndef INC_h3d__pass__HardwarePick
#define INC_h3d__pass__HardwarePick
typedef struct _h3d__pass__$HardwarePick *h3d__pass__$HardwarePick;
typedef struct _h3d__pass__HardwarePick *h3d__pass__HardwarePick;
#include <hl/Class.h>
#include <hl/BaseType.h>
#include <_std/String.h>
#include <h3d/pass/Default.h>
#include <h3d/pass/Base.h>
#include <h3d/scene/RenderContext.h>
#include <h3d/pass/ShaderManager.h>
#include <h3d/pass/PassList.h>
#include <h3d/pass/_HardwarePick/FixedColor.h>
#include <h3d/mat/Texture.h>
#include <h3d/mat/Pass.h>


struct _h3d__pass__$HardwarePick {
	hl_type *$type;
	hl_type* __type__;
	vdynamic* __meta__;
	varray* __implementedBy__;
	String __name__;
	vdynamic* __constructor__;
};
struct _h3d__pass__HardwarePick {
	hl_type *$type;
	h3d__scene__RenderContext ctx;
	String name;
	h3d__pass__ShaderManager manager;
	vclosure* defaultSort;
	int cameraView_id;
	int cameraNear_id;
	int cameraFar_id;
	int cameraProj_id;
	int cameraPos_id;
	int cameraProjDiag_id;
	int cameraProjFlip_id;
	int cameraViewProj_id;
	int cameraInverseViewProj_id;
	int globalTime_id;
	int pixelSize_id;
	int globalModelView_id;
	int globalModelViewInverse_id;
	double pickX;
	double pickY;
	h3d__pass___HardwarePick__FixedColor fixedColor;
	int colorID;
	h3d__mat__Texture texOut;
	h3d__mat__Pass material;
	int pickedIndex;
};
#endif

