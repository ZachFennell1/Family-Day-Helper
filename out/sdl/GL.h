// Generated by HLC 4.2.4 (HL v4)
#ifndef INC_sdl__GL
#define INC_sdl__GL
typedef struct _sdl__$GL *sdl__$GL;
typedef struct _sdl__GL *sdl__GL;
#include <hl/Class.h>
#include <hl/BaseType.h>
#include <_std/String.h>


struct _sdl__$GL {
	hl_type *$type;
	hl_type* __type__;
	vdynamic* __meta__;
	varray* __implementedBy__;
	String __name__;
	vdynamic* __constructor__;
	vclosure* getParameter;
	vclosure* getProgramInfoLog;
	vclosure* getShaderInfoLog;
	int DEPTH_BUFFER_BIT;
	int STENCIL_BUFFER_BIT;
	int COLOR_BUFFER_BIT;
	int POINTS;
	int LINES;
	int LINE_LOOP;
	int LINE_STRIP;
	int TRIANGLES;
	int TRIANGLE_STRIP;
	int TRIANGLE_FAN;
	int ZERO;
	int ONE;
	int SRC_COLOR;
	int ONE_MINUS_SRC_COLOR;
	int SRC_ALPHA;
	int ONE_MINUS_SRC_ALPHA;
	int DST_ALPHA;
	int ONE_MINUS_DST_ALPHA;
	int DST_COLOR;
	int ONE_MINUS_DST_COLOR;
	int SRC_ALPHA_SATURATE;
	int FUNC_ADD;
	int FUNC_MIN;
	int FUNC_MAX;
	int BLEND_EQUATION;
	int BLEND_EQUATION_RGB;
	int BLEND_EQUATION_ALPHA;
	int FUNC_SUBTRACT;
	int FUNC_REVERSE_SUBTRACT;
	int BLEND_DST_RGB;
	int BLEND_SRC_RGB;
	int BLEND_DST_ALPHA;
	int BLEND_SRC_ALPHA;
	int CONSTANT_COLOR;
	int ONE_MINUS_CONSTANT_COLOR;
	int CONSTANT_ALPHA;
	int ONE_MINUS_CONSTANT_ALPHA;
	int BLEND_COLOR;
	int ARRAY_BUFFER;
	int ELEMENT_ARRAY_BUFFER;
	int ARRAY_BUFFER_BINDING;
	int ELEMENT_ARRAY_BUFFER_BINDING;
	int SHADER_STORAGE_BUFFER;
	int UNIFORM_BUFFER;
	int QUERY_BUFFER;
	int STREAM_DRAW;
	int STATIC_DRAW;
	int DYNAMIC_DRAW;
	int BUFFER_SIZE;
	int BUFFER_USAGE;
	int CURRENT_VERTEX_ATTRIB;
	int FRONT;
	int BACK;
	int FRONT_AND_BACK;
	int POINT;
	int LINE;
	int FILL;
	int CULL_FACE;
	int BLEND;
	int DITHER;
	int STENCIL_TEST;
	int DEPTH_TEST;
	int SCISSOR_TEST;
	int POLYGON_OFFSET_FILL;
	int SAMPLE_ALPHA_TO_COVERAGE;
	int SAMPLE_COVERAGE;
	int MULTISAMPLE;
	int DEPTH_CLAMP;
	int NO_ERROR;
	int INVALID_ENUM;
	int INVALID_VALUE;
	int INVALID_OPERATION;
	int OUT_OF_MEMORY;
	int CW;
	int CCW;
	int LINE_WIDTH;
	int ALIASED_POINT_SIZE_RANGE;
	int ALIASED_LINE_WIDTH_RANGE;
	int CULL_FACE_MODE;
	int FRONT_FACE;
	int DEPTH_RANGE;
	int DEPTH_WRITEMASK;
	int DEPTH_CLEAR_VALUE;
	int DEPTH_FUNC;
	int STENCIL_CLEAR_VALUE;
	int STENCIL_FUNC;
	int STENCIL_FAIL;
	int STENCIL_PASS_DEPTH_FAIL;
	int STENCIL_PASS_DEPTH_PASS;
	int STENCIL_REF;
	int STENCIL_VALUE_MASK;
	int STENCIL_WRITEMASK;
	int STENCIL_BACK_FUNC;
	int STENCIL_BACK_FAIL;
	int STENCIL_BACK_PASS_DEPTH_FAIL;
	int STENCIL_BACK_PASS_DEPTH_PASS;
	int STENCIL_BACK_REF;
	int STENCIL_BACK_VALUE_MASK;
	int STENCIL_BACK_WRITEMASK;
	int VIEWPORT;
	int SCISSOR_BOX;
	int COLOR_CLEAR_VALUE;
	int COLOR_WRITEMASK;
	int UNPACK_ALIGNMENT;
	int PACK_ALIGNMENT;
	int MAX_TEXTURE_SIZE;
	int MAX_VIEWPORT_DIMS;
	int SUBPIXEL_BITS;
	int RED_BITS;
	int GREEN_BITS;
	int BLUE_BITS;
	int ALPHA_BITS;
	int DEPTH_BITS;
	int STENCIL_BITS;
	int POLYGON_OFFSET_UNITS;
	int POLYGON_OFFSET_FACTOR;
	int TEXTURE_BINDING_2D;
	int SAMPLE_BUFFERS;
	int SAMPLES;
	int SAMPLE_COVERAGE_VALUE;
	int SAMPLE_COVERAGE_INVERT;
	int COMPRESSED_TEXTURE_FORMATS;
	int DONT_CARE;
	int FASTEST;
	int NICEST;
	int GENERATE_MIPMAP_HINT;
	int BYTE;
	int UNSIGNED_BYTE;
	int SHORT;
	int UNSIGNED_SHORT;
	int INT;
	int UNSIGNED_INT;
	int FLOAT;
	int HALF_FLOAT;
	int DEPTH_COMPONENT;
	int RED;
	int GREEN;
	int BLUE;
	int ALPHA;
	int RG;
	int RGB;
	int RGBA;
	int LUMINANCE;
	int LUMINANCE_ALPHA;
	int BGRA;
	int RGBA8;
	int RGB10_A2;
	int RG16;
	int RG16UI;
	int RG16F;
	int RG32F;
	int R8;
	int RG8;
	int R16F;
	int R32F;
	int UNSIGNED_INT_2_10_10_10_REV;
	int UNSIGNED_INT_10F_11F_11F_REV;
	int UNSIGNED_SHORT_4_4_4_4;
	int UNSIGNED_SHORT_5_5_5_1;
	int UNSIGNED_SHORT_5_6_5;
	int SRGB;
	int SRGB8;
	int SRGB_ALPHA;
	int SRGB8_ALPHA;
	int FRAMEBUFFER_SRGB;
	int RGBA32F;
	int RGB32F;
	int RGBA16F;
	int RGB16F;
	int R11F_G11F_B10F;
	int ALPHA16F;
	int ALPHA32F;
	int FRAGMENT_SHADER;
	int VERTEX_SHADER;
	int GEOMETRY_SHADER;
	int COMPUTE_SHADER;
	int MAX_VERTEX_ATTRIBS;
	int MAX_VERTEX_UNIFORM_VECTORS;
	int MAX_VARYING_VECTORS;
	int MAX_COMBINED_TEXTURE_IMAGE_UNITS;
	int MAX_VERTEX_TEXTURE_IMAGE_UNITS;
	int MAX_TEXTURE_IMAGE_UNITS;
	int MAX_FRAGMENT_UNIFORM_VECTORS;
	int SHADER_TYPE;
	int DELETE_STATUS;
	int LINK_STATUS;
	int VALIDATE_STATUS;
	int ATTACHED_SHADERS;
	int ACTIVE_UNIFORMS;
	int ACTIVE_ATTRIBUTES;
	int SHADING_LANGUAGE_VERSION;
	int CURRENT_PROGRAM;
	int NEVER;
	int LESS;
	int EQUAL;
	int LEQUAL;
	int GREATER;
	int NOTEQUAL;
	int GEQUAL;
	int ALWAYS;
	int KEEP;
	int REPLACE;
	int INCR;
	int DECR;
	int INVERT;
	int INCR_WRAP;
	int DECR_WRAP;
	int VENDOR;
	int RENDERER;
	int VERSION;
	int NEAREST;
	int LINEAR;
	int NEAREST_MIPMAP_NEAREST;
	int LINEAR_MIPMAP_NEAREST;
	int NEAREST_MIPMAP_LINEAR;
	int LINEAR_MIPMAP_LINEAR;
	int TEXTURE_MAG_FILTER;
	int TEXTURE_MIN_FILTER;
	int TEXTURE_WRAP_R;
	int TEXTURE_WRAP_S;
	int TEXTURE_WRAP_T;
	int TEXTURE_LOD_BIAS;
	int TEXTURE_MAX_ANISOTROPY;
	int TEXTURE_COMPARE_MODE;
	int TEXTURE_COMPARE_FUNC;
	int COMPARE_REF_TO_TEXTURE;
	int TEXTURE_2D;
	int TEXTURE_2D_MULTISAMPLE;
	int TEXTURE_3D;
	int TEXTURE;
	int TEXTURE_2D_ARRAY;
	int TEXTURE_CUBE_MAP_SEAMLESS;
	int TEXTURE_CUBE_MAP;
	int TEXTURE_BINDING_CUBE_MAP;
	int TEXTURE_CUBE_MAP_POSITIVE_X;
	int TEXTURE_CUBE_MAP_NEGATIVE_X;
	int TEXTURE_CUBE_MAP_POSITIVE_Y;
	int TEXTURE_CUBE_MAP_NEGATIVE_Y;
	int TEXTURE_CUBE_MAP_POSITIVE_Z;
	int TEXTURE_CUBE_MAP_NEGATIVE_Z;
	int MAX_CUBE_MAP_TEXTURE_SIZE;
	int TEXTURE0;
	int TEXTURE1;
	int TEXTURE2;
	int TEXTURE3;
	int TEXTURE4;
	int TEXTURE5;
	int TEXTURE6;
	int TEXTURE7;
	int TEXTURE8;
	int TEXTURE9;
	int TEXTURE10;
	int TEXTURE11;
	int TEXTURE12;
	int TEXTURE13;
	int TEXTURE14;
	int TEXTURE15;
	int TEXTURE16;
	int TEXTURE17;
	int TEXTURE18;
	int TEXTURE19;
	int TEXTURE20;
	int TEXTURE21;
	int TEXTURE22;
	int TEXTURE23;
	int TEXTURE24;
	int TEXTURE25;
	int TEXTURE26;
	int TEXTURE27;
	int TEXTURE28;
	int TEXTURE29;
	int TEXTURE30;
	int TEXTURE31;
	int ACTIVE_TEXTURE;
	int REPEAT;
	int CLAMP_TO_EDGE;
	int MIRRORED_REPEAT;
	int FLOAT_VEC2;
	int FLOAT_VEC3;
	int FLOAT_VEC4;
	int INT_VEC2;
	int INT_VEC3;
	int INT_VEC4;
	int BOOL;
	int BOOL_VEC2;
	int BOOL_VEC3;
	int BOOL_VEC4;
	int FLOAT_MAT2;
	int FLOAT_MAT3;
	int FLOAT_MAT4;
	int SAMPLER_2D;
	int SAMPLER_CUBE;
	int VERTEX_ATTRIB_ARRAY_ENABLED;
	int VERTEX_ATTRIB_ARRAY_SIZE;
	int VERTEX_ATTRIB_ARRAY_STRIDE;
	int VERTEX_ATTRIB_ARRAY_TYPE;
	int VERTEX_ATTRIB_ARRAY_NORMALIZED;
	int VERTEX_ATTRIB_ARRAY_POINTER;
	int VERTEX_ATTRIB_ARRAY_BUFFER_BINDING;
	int VERTEX_PROGRAM_POINT_SIZE;
	int POINT_SPRITE;
	int COMPILE_STATUS;
	int LOW_FLOAT;
	int MEDIUM_FLOAT;
	int HIGH_FLOAT;
	int LOW_INT;
	int MEDIUM_INT;
	int HIGH_INT;
	int FRAMEBUFFER;
	int RENDERBUFFER;
	int READ_FRAMEBUFFER;
	int DRAW_FRAMEBUFFER;
	int DRAW_INDIRECT_BUFFER;
	int RGBA4;
	int RGB5_A1;
	int RGB565;
	int DEPTH_COMPONENT16;
	int DEPTH_COMPONENT24;
	int STENCIL_INDEX;
	int STENCIL_INDEX8;
	int DEPTH_STENCIL;
	int RENDERBUFFER_WIDTH;
	int RENDERBUFFER_HEIGHT;
	int RENDERBUFFER_INTERNAL_FORMAT;
	int RENDERBUFFER_RED_SIZE;
	int RENDERBUFFER_GREEN_SIZE;
	int RENDERBUFFER_BLUE_SIZE;
	int RENDERBUFFER_ALPHA_SIZE;
	int RENDERBUFFER_DEPTH_SIZE;
	int RENDERBUFFER_STENCIL_SIZE;
	int FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE;
	int FRAMEBUFFER_ATTACHMENT_OBJECT_NAME;
	int FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL;
	int FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE;
	int COLOR_ATTACHMENT0;
	int DEPTH_ATTACHMENT;
	int STENCIL_ATTACHMENT;
	int DEPTH_STENCIL_ATTACHMENT;
	int NONE;
	int FRAMEBUFFER_COMPLETE;
	int FRAMEBUFFER_INCOMPLETE_ATTACHMENT;
	int FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT;
	int FRAMEBUFFER_INCOMPLETE_DIMENSIONS;
	int FRAMEBUFFER_UNSUPPORTED;
	int FRAMEBUFFER_BINDING;
	int RENDERBUFFER_BINDING;
	int MAX_RENDERBUFFER_SIZE;
	int INVALID_FRAMEBUFFER_OPERATION;
	int UNPACK_FLIP_Y_WEBGL;
	int UNPACK_PREMULTIPLY_ALPHA_WEBGL;
	int CONTEXT_LOST_WEBGL;
	int UNPACK_COLORSPACE_CONVERSION_WEBGL;
	int BROWSER_DEFAULT_WEBGL;
	int SAMPLES_PASSED;
	int TIMESTAMP;
	int VERTEX_ATTRIB_ARRAY_BARRIER_BIT;
	int ELEMENT_ARRAY_BARRIER_BIT;
	int UNIFORM_BARRIER_BIT;
	int TEXTURE_FETCH_BARRIER_BIT;
	int SHADER_IMAGE_ACCESS_BARRIER_BIT;
	int COMMAND_BARRIER_BIT;
	int PIXEL_BUFFER_BARRIER_BIT;
	int TEXTURE_UPDATE_BARRIER_BIT;
	int BUFFER_UPDATE_BARRIER_BIT;
	int FRAMEBUFFER_BARRIER_BIT;
	int TRANSFORM_FEEDBACK_BARRIER_BIT;
	int ATOMIC_COUNTER_BARRIER_BIT;
	int SHADER_STORAGE_BARRIER_BIT;
	int QUERY_BUFFER_BARRIER_BIT;
	int ALL_BARRIER_BITS;
};
struct _sdl__GL {
	hl_type *$type;
};
#endif

