// Generated by HLC 4.2.4 (HL v4)
#ifndef INC_sdl__Window
#define INC_sdl__Window
typedef struct _sdl__$Window *sdl__$Window;
typedef struct _sdl__Window *sdl__Window;
#include <hl/Class.h>
#include <hl/BaseType.h>
#include <_std/String.h>
#include <hl/types/ArrayObj.h>
#include <hl/natives.h>


struct _sdl__$Window {
	hl_type *$type;
	hl_type* __type__;
	vdynamic* __meta__;
	varray* __implementedBy__;
	String __name__;
	vdynamic* __constructor__;
	hl__types__ArrayObj windows;
	int SDL_WINDOWPOS_UNDEFINED;
	int SDL_WINDOWPOS_CENTERED;
	int SDL_WINDOW_FULLSCREEN;
	int SDL_WINDOW_OPENGL;
	int SDL_WINDOW_SHOWN;
	int SDL_WINDOW_HIDDEN;
	int SDL_WINDOW_BORDERLESS;
	int SDL_WINDOW_RESIZABLE;
	int SDL_WINDOW_MINIMIZED;
	int SDL_WINDOW_MAXIMIZED;
	int SDL_WINDOW_INPUT_GRABBED;
	int SDL_WINDOW_INPUT_FOCUS;
	int SDL_WINDOW_MOUSE_FOCUS;
	int SDL_WINDOW_FULLSCREEN_DESKTOP;
	int SDL_WINDOW_FOREIGN;
	int SDL_WINDOW_ALLOW_HIGHDPI;
	int SDL_WINDOW_MOUSE_CAPTURE;
	int SDL_WINDOW_ALWAYS_ON_TOP;
	int SDL_WINDOW_SKIP_TASKBAR;
	int SDL_WINDOW_UTILITY;
	int SDL_WINDOW_TOOLTIP;
	int SDL_WINDOW_POPUP_MENU;
	int SDL_WINDOW_VULKAN;
};
struct _sdl__Window {
	hl_type *$type;
	sdl_window* win;
	sdl_gl* glctx;
	double lastFrame;
	String title;
	bool vsync;
	int displayMode;
	bool visible;
};
#endif

