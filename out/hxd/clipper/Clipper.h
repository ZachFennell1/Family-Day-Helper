// Generated by HLC 4.2.4 (HL v4)
#ifndef INC_hxd__clipper__Clipper
#define INC_hxd__clipper__Clipper
typedef struct _hxd__clipper__$Clipper *hxd__clipper__$Clipper;
typedef struct _hxd__clipper__Clipper *hxd__clipper__Clipper;
#include <hl/Class.h>
#include <hl/BaseType.h>
#include <_std/String.h>
#include <hxd/clipper/_Clipper/IntersectNode.h>
#include <hl/types/ArrayObj.h>
#include <hxd/clipper/PolyFillType.h>
#include <hxd/clipper/ResultKind.h>
#include <hxd/clipper/_Clipper/ClipperBase.h>
#include <hxd/clipper/_Clipper/LocalMinima.h>
#include <hxd/clipper/ClipType.h>
#include <hxd/clipper/_Clipper/Scanbeam.h>
#include <hxd/clipper/_Clipper/TEdge.h>


struct _hxd__clipper__$Clipper {
	hl_type *$type;
	hl_type* __type__;
	vdynamic* __meta__;
	varray* __implementedBy__;
	String __name__;
	vdynamic* __constructor__;
	vclosure* compareY;
	vclosure* Orientation;
	vclosure* polArea;
	vclosure* SimplifyPolygon;
	vclosure* SimplifyPolygons;
	vclosure* MinkowskiSums;
	vclosure* MinkowskiDiff;
};
struct _hxd__clipper__Clipper {
	hl_type *$type;
	bool preserveCollinear;
	hxd__clipper___Clipper__LocalMinima m_MinimaList;
	hxd__clipper___Clipper__LocalMinima m_CurrentLM;
	hl__types__ArrayObj m_edges;
	bool strictlySimple;
	bool reverseSolution;
	venum* resultKind;
	hl__types__ArrayObj m_PolyOuts;
	venum* m_ClipType;
	hxd__clipper___Clipper__Scanbeam m_Scanbeam;
	hxd__clipper___Clipper__TEdge m_ActiveEdges;
	hxd__clipper___Clipper__TEdge m_SortedEdges;
	hl__types__ArrayObj m_IntersectList;
	bool m_ExecuteLocked;
	venum* m_ClipFillType;
	venum* m_SubjFillType;
	hl__types__ArrayObj m_Joins;
	hl__types__ArrayObj m_GhostJoins;
	bool m_UsingPolyTree;
};
#endif

