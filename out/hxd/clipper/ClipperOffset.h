// Generated by HLC 4.2.4 (HL v4)
#ifndef INC_hxd__clipper__ClipperOffset
#define INC_hxd__clipper__ClipperOffset
typedef struct _hxd__clipper__$ClipperOffset *hxd__clipper__$ClipperOffset;
typedef struct _hxd__clipper__ClipperOffset *hxd__clipper__ClipperOffset;
#include <hl/Class.h>
#include <hl/BaseType.h>
#include <_std/String.h>
#include <hl/types/ArrayObj.h>
#include <h2d/col/IPoint.h>
#include <hxd/clipper/_Clipper/PolyNode.h>
#include <hxd/clipper/ResultKind.h>


struct _hxd__clipper__$ClipperOffset {
	hl_type *$type;
	hl_type* __type__;
	vdynamic* __meta__;
	varray* __implementedBy__;
	String __name__;
	vdynamic* __constructor__;
};
struct _hxd__clipper__ClipperOffset {
	hl_type *$type;
	hl__types__ArrayObj m_destPolys;
	hl__types__ArrayObj m_srcPoly;
	hl__types__ArrayObj m_destPoly;
	hl__types__ArrayObj m_normals;
	double m_delta;
	double m_sinA;
	double m_sin;
	double m_cos;
	double m_miterLim;
	double m_StepsPerRad;
	h2d__col__IPoint m_lowest;
	hxd__clipper___Clipper__PolyNode m_polyNodes;
	double ArcTolerance;
	double MiterLimit;
	venum* resultKind;
	double def_arc_tolerance;
	double two_pi;
};
#endif

